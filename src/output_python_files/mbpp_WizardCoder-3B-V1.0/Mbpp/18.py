"""
Write a function to remove characters from the first string which are present in the second string.
assert remove_dirty_chars("probasscurve", "pros") == 'bacuve'
"""

def remove_dirty_chars(s1, s2):
    return ''.join(c for c in s1 if c not in s2)

# Test cases
assert remove_dirty_chars("probasscurve", "pros") == 'bacuve'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "o") == 'hell'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == 'heo'
assert remove_dirty_chars("hello", "h") == 'ello'
assert remove_dirty_chars("hello", "e") == 'hll'
assert remove_dirty_chars("hello", "llo") == 'he'
assert remove_dirty_chars("hello", "ll") == 'he'
assert remove_dirty_chars("hello", "l") == '