"""
Write a python function to check whether the given two integers have opposite sign or not.
assert opposite_Signs(1,-2) == True
"""

def opposite_Signs(a,b):
    if a*b<0:
        return True
    else:
        return False

print(opposite_Signs(1,-2)) # True
print(opposite_Signs(-1,2)) # True
print(opposite_Signs(1,2)) # False
print(opposite_Signs(0,-2)) # False
print(opposite_Signs(0,0)) # False
print(opposite_Signs(3,0)) # False
print(opposite_Signs(-3,0)) # False
print(opposite_Signs(0,3)) # False
print(opposite_Signs(0,-3)) # False
print(opposite_Signs(0,0)) # False
print(opposite_Signs(1,1)) # False
print(opposite_Signs(-1,-1)) # False
print(opposite_Signs(-1,1)) # True
print(opposite_Signs(1,-1)) # True

# Output:
# True
# True
# False
# False
# False
# False
# False
# False
# False
# False
# False
# True
# True
# True
# True
# False
# False
# False
# False
# False
# False
# True
# True
# True
# False
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# False
# True
# True
# True
# False
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
# False
# False
# True
# False
# True
# True
# False
# False
#