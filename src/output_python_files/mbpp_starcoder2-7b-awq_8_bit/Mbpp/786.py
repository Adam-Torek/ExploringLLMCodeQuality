"""
Write a function to locate the right insertion point for a specified value in sorted order.
assert right_insertion([1,2,4,5],6)==4
"""
def right_insertion(arr,val):
    if arr==[]:
        return 0
    if arr[0]>val:
        return 0
    if arr[-1]<val:
        return len(arr)
    if arr[0]==val:
        return 0
    if arr[-1]==val:
        return len(arr)-1
    if len(arr)==2:
        if arr[1]==val:
            return 1
        else:
            return 0
    if len(arr)==3:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        else:
            return 0
    if len(arr)==4:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        else:
            return 0
    if len(arr)==5:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        else:
            return 0
    if len(arr)==6:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        if arr[5]==val:
            return 5
        else:
            return 0
    if len(arr)==7:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        if arr[5]==val:
            return 5
        if arr[6]==val:
            return 6
        else:
            return 0
    if len(arr)==8:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        if arr[5]==val:
            return 5
        if arr[6]==val:
            return 6
        if arr[7]==val:
            return 7
        else:
            return 0
    if len(arr)==9:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        if arr[5]==val:
            return 5
        if arr[6]==val:
            return 6
        if arr[7]==val:
            return 7
        if arr[8]==val:
            return 8
        else:
            return 0
    if len(arr)==10:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        if arr[5]==val:
            return 5
        if arr[6]==val:
            return 6
        if arr[7]==val:
            return 7
        if arr[8]==val:
            return 8
        if arr[9]==val:
            return 9
        else:
            return 0
    if len(arr)==11:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        if arr[5]==val:
            return 5
        if arr[6]==val:
            return 6
        if arr[7]==val:
            return 7
        if arr[8]==val:
            return 8
        if arr[9]==val:
            return 9
        if arr[10]==val:
            return 10
        else:
            return 0
    if len(arr)==12:
        if arr[1]==val:
            return 1
        if arr[2]==val:
            return 2
        if arr[3]==val:
            return 3
        if arr[4]==val:
            return 4
        if arr[5]==val:
            return 5
        if arr[6]==val:
            return 6
        if arr[7]==val:
            return 7
        if arr[8]==