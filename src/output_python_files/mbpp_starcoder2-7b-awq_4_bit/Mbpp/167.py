"""
Write a python function to find the smallest power of 2 greater than or equal to n.
assert next_power_of_2(0) == 1
"""

def next_power_of_2(n):
    if n == 0:
        return 1
    else:
        return 2 ** (n - 1).bit_length()

print(next_power_of_2(0))
print(next_power_of_2(1))
print(next_power_of_2(2))
print(next_power_of_2(3))
print(next_power_of_2(4))
print(next_power_of_2(5))
print(next_power_of_2(6))
print(next_power_of_2(7))
print(next_power_of_2(8))
print(next_power_of_2(9))
print(next_power_of_2(10))
print(next_power_of_2(11))
print(next_power_of_2(12))
print(next_power_of_2(13))
print(next_power_of_2(14))
print(next_power_of_2(15))
print(next_power_of_2(16))
print(next_power_of_2(17))
print(next_power_of_2(18))
print(next_power_of_2(19))
print(next_power_of_2(20))
print(next_power_of_2(21))
print(next_power_of_2(22))
print(next_power_of_2(23))
print(next_power_of_2(24))
print(next_power_of_2(25))
print(next_power_of_2(26))
print(next_power_of_2(27))
print(next_power_of_2(28))
print(next_power_of_2(29))
print(next_power_of_2(30))
print(next_power_of_2(31))
print(next_power_of_2(32))
print(next_power_of_2(33))
print(next_power_of_2(34))
print(next_power_of_2(35))
print(next_power_of_2(36))
print(next_power_of_2(37))
print(next_power_of_2(38))
print(next_power_of_2(39))
print(next_power_of_2(40))
print(next_power_of_2(41))
print(next_power_of_2(42))
print(next_power_of_2(43))
print(next_power_of_2(44))
print(next_power_of_2(45))
print(next_power_of_2(46))
print(next_power_of_2(47))
print(next_power_of_2(48))
print(next_power_of_2(49))
print(next_power_of_2(50))
print(next_power_of_2(51))
print(next_power_of_2(52))
print(next_power_of_2(53))
print(next_power_of_2(54))
print(next_power_of_2(55))
print(next_power_of_2(56))
print(next_power_of_2(57))
print(next_power_of_2(58))
print(next_power_of_2(59))
print(next_power_of_2(60))
print(next_power_of_2(61))
print(next_power_of_2(62))
print(next_power_of_2(63))
print(next_power_of_2(64))
print(next_power_of_2(