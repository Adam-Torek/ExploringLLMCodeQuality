"""
Write a function to flatten a list and sum all of its elements.
assert recursive_list_sum(([1, 2, [3,4],[5,6]]))==21
"""

def recursive_list_sum(lst):
    """
    >>> recursive_list_sum([1, 2, [3,4],[5,6]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17,18]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23]])
    21
    >>> recursive_list_sum([1, 2, [3,4],[5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,