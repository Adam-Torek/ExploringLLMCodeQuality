"""
Write a function to find the number of ways to partition a set of Bell numbers.
assert bell_number(2)==2
"""

def bell_number(n):
    """
    Bell numbers are defined as the sum of the reciprocals of the factorials of the positive integers.
    The first few Bell numbers are: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887, 9227465, 14930352, 24157817, 39088169, 63245986, 102334155, 165580141, 267914296, 433494437, 701408733, 1134903170, 1836311903, 2971215073, 4807526976, 7778742049, 12586269025, 20365011074, 32951280099, 53316291173, 89544878739, 144967470209, 241578171428, 390881695120, 632459867215, 1023341557864, 16558014109375, 26791429615280, 433494437170944, 7014087331622776, 11349031701650110, 183631190325846976, 2971215073319555840, 4807526976272888960, 7778742049250313951, 12586269025358421109, 203650110742467460752, 32951280099584624477520, 53316291173438743368730, 8954487873921508621915264000, 144967470209227898880089898000, 2415781714281716400000000000, 39088169512098504000000000000, 632459867215504531250000000000, 10233415578640000000000000000